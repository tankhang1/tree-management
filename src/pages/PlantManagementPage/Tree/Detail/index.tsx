import {
  Badge,
  Card,
  Divider,
  Group,
  Stack,
  Text,
  Title,
  Image,
  Grid,
  Paper,
  Button,
} from "@mantine/core";
import { useForm } from "@mantine/form";
import {
  IconLeaf,
  IconDroplet,
  IconCalendarTime,
  IconArrowLeft,
} from "@tabler/icons-react";
import { useNavigate } from "react-router-dom";

const PlantManagementTreeDetailPage = () => {
  const navigate = useNavigate();
  const form = useForm({
    initialValues: {
      id: "CT001",
      name: "S·∫ßu ri√™ng Ri6",
      type: "C√¢y ƒÉn tr√°i",
      note: "∆Øa ƒë·∫•t th·ªãt, tho√°t n∆∞·ªõc t·ªët.",
      seedCode: "SR-RI6",
      seedName: "Gi·ªëng Ri6",
      supplier: "C√¥ng ty N√¥ng s·∫£n Vi·ªát",
      origin: "Vi·ªát Nam",
      germinationRate: "85",
      yield: "25",
      seedNote: "Gi·ªëng ƒë∆∞·ª£c ki·ªÉm ƒë·ªãnh b·ªüi B·ªô NN&PTNT.",
      seedDoc: null,
      harvestMethod: "Theo qu·∫£",
      growthCycle: "Trung b√¨nh 3 nƒÉm",
      growthStages: [
        "∆Ø∆°m gi·ªëng",
        "Tr·ªìng c√¢y con",
        "ChƒÉm s√≥c sinh tr∆∞·ªüng",
        "Ra hoa",
        "K·∫øt tr√°i",
      ],
      growthTime: "1095",
      growthNote: "C·∫ßn t·ªâa c√†nh ƒë·ªãnh k·ª≥ v√† ph√≤ng ng·ª´a s√¢u b·ªánh.",
    },
  });

  return (
    <Card withBorder shadow="md" radius={4} p="xl">
      <Group mb={"md"}>
        <Button
          variant="subtle"
          radius={4}
          leftSection={<IconArrowLeft size={18} />}
          onClick={() => navigate(-1)}
        >
          Quay l·∫°i
        </Button>
        <Title order={3} c="green.8">
          üå≥ Chi ti·∫øt c√¢y tr·ªìng
        </Title>
      </Group>

      <Grid gutter={40}>
        <Grid.Col span={{ base: 12, md: 4 }}>
          <Image
            src="https://images.prismic.io/queenfarm/Z5YODpbqstJ992qW__550x550-cr_sau-rieng-57-removebg-preview.png?auto=format%2Ccompress&fit=max&w=3840"
            radius="md"
            h={350}
            alt="H√¨nh ·∫£nh c√¢y tr·ªìng"
            fit="contain"
          />
          <Paper p="sm" radius={4} withBorder>
            <Text size="lg" fw={600} mb={4}>
              Th√¥ng tin chung
            </Text>
            <Group justify="space-between">
              <Text>M√£ c√¢y:</Text>
              <Text>{form.values.id}</Text>
            </Group>
            <Group justify="space-between">
              <Text>T√™n c√¢y:</Text>
              <Text>{form.values.name}</Text>
            </Group>
            <Group justify="space-between">
              <Text>Lo·∫°i c√¢y:</Text>
              <Badge color="teal" size="sm">
                {form.values.type}
              </Badge>
            </Group>
            <Group justify="space-between">
              <Text>Ghi ch√∫:</Text>
              <Text>{form.values.note}</Text>
            </Group>
          </Paper>
        </Grid.Col>

        <Grid.Col span={{ base: 12, md: 8 }}>
          <Stack gap="md">
            <Divider
              label={
                <Group>
                  <IconLeaf size={16} /> Th√¥ng tin h·∫°t gi·ªëng
                </Group>
              }
              labelPosition="left"
            />

            <Paper p="sm" radius={4} withBorder>
              <Group justify="space-between">
                <Text>M√£ gi·ªëng:</Text>
                <Text>{form.values.seedCode}</Text>
              </Group>
              <Group justify="space-between">
                <Text>T√™n gi·ªëng:</Text>
                <Text>{form.values.seedName}</Text>
              </Group>
              <Group justify="space-between">
                <Text>Nh√† cung c·∫•p:</Text>
                <Text>{form.values.supplier}</Text>
              </Group>
              <Group justify="space-between">
                <Text>Xu·∫•t x·ª©:</Text>
                <Text>{form.values.origin}</Text>
              </Group>
              <Group justify="space-between">
                <Text>T·ª∑ l·ªá n·∫£y m·∫ßm:</Text>
                <Text>{form.values.germinationRate}%</Text>
              </Group>
              <Group justify="space-between">
                <Text>NƒÉng su·∫•t:</Text>
                <Text>{form.values.yield} t·∫•n/ha</Text>
              </Group>
              <Group align="flex-start">
                <Text>M√¥ t·∫£:</Text>
                <Text>{form.values.seedNote}</Text>
              </Group>
            </Paper>

            <Divider
              label={
                <Group>
                  <IconDroplet size={16} /> H√¨nh th·ª©c thu ho·∫°ch
                </Group>
              }
              labelPosition="left"
            />

            <Paper p="sm" radius={4} withBorder>
              <Group justify="space-between">
                <Text>Ph∆∞∆°ng ph√°p:</Text>
                <Text>{form.values.harvestMethod}</Text>
              </Group>
            </Paper>

            <Divider
              label={
                <Group>
                  <IconCalendarTime size={16} /> Chu k·ª≥ sinh tr∆∞·ªüng
                </Group>
              }
              labelPosition="left"
            />

            <Paper p="sm" radius={4} withBorder>
              <Group justify="space-between">
                <Text>Chu k·ª≥:</Text>
                <Text>{form.values.growthCycle}</Text>
              </Group>
              <Group align="center" justify="space-between">
                <Text mr="sm">Giai ƒëo·∫°n:</Text>
                <Group gap={4}>
                  {form.values.growthStages.map((s, i) => (
                    <Badge key={i} size="xs" variant="light">
                      {s}
                    </Badge>
                  ))}
                </Group>
              </Group>
              <Group justify="space-between">
                <Text>Th·ªùi gian:</Text>
                <Text>{form.values.growthTime} ng√†y</Text>
              </Group>
              <Group justify="space-between" align="flex-start">
                <Text>ƒêi·ªÅu ki·ªán ƒë·∫∑c th√π:</Text>
                <Text>{form.values.growthNote}</Text>
              </Group>
            </Paper>
          </Stack>
        </Grid.Col>
      </Grid>
    </Card>
  );
};

export default PlantManagementTreeDetailPage;
