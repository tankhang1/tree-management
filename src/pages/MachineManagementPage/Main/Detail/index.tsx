import {
  Card,
  Text,
  Title,
  Stack,
  Badge,
  Divider,
  Box,
  Grid,
  Group,
  Button,
} from "@mantine/core";
import type { MRT_ColumnDef } from "mantine-react-table";
import Table from "../../../../components/Table";
import { IconArrowLeft } from "@tabler/icons-react";
import { useNavigate } from "react-router-dom";
type MaintenanceRecord = {
  id: string;
  date: string;
  description: string;
  performedBy: string;
};

const maintenanceRecords: MaintenanceRecord[] = [
  {
    id: "MT001",
    date: "2023-02-10",
    description: "Thay nh·ªõt ƒë·ªãnh k·ª≥",
    performedBy: "Nguy·ªÖn VƒÉn B",
  },
  {
    id: "MT004",
    date: "2023-08-15",
    description: "B·∫£o tr√¨ h·ªôp s·ªë",
    performedBy: "C√¥ng ty TNHH K·ªπ Thu·∫≠t A",
  },
  {
    id: "MT008",
    date: "2024-03-28",
    description: "Thay l·ªçc d·∫ßu",
    performedBy: "Tr·∫ßn VƒÉn C",
  },
  {
    id: "MT002",
    date: "2022-12-05",
    description: "Ki·ªÉm tra ƒë·ªông c∆°",
    performedBy: "L√™ Th·ªã D",
  },
  {
    id: "MT009",
    date: "2023-11-01",
    description: "S∆°n l·∫°i v·ªè xe",
    performedBy: "Garage 79",
  },
];

const machine = {
  id: "MC001",
  name: "Xe t·∫£i Hino 5 t·∫•n",
  type: "Xe t·∫£i",
  status: "ƒêang v·∫≠n h√†nh",
  specs: "<ul><li>ƒê·ªông c∆° diesel</li><li>T·∫£i tr·ªçng 5 t·∫•n</li></ul>",
  price: 780000000,
  quantity: 2,
  manualFile: "https://pdfobject.com/pdf/sample.pdf",
  inspectionFile: "https://pdfobject.com/pdf/sample.pdf",
};
const MachineManagementMainDetailPage = () => {
  const navigate = useNavigate();
  const {
    id,
    name,
    type,
    status,
    specs,
    price,
    quantity,
    manualFile,
    inspectionFile,
  } = machine;

  const maintenanceColumns: MRT_ColumnDef<MaintenanceRecord>[] = [
    { accessorKey: "id", header: "M√£ b·∫£o tr√¨" },
    {
      accessorKey: "date",
      header: "Ng√†y b·∫£o tr√¨",
      Cell: ({ row }) =>
        new Date(row.original.date).toLocaleDateString("vi-VN"),
    },
    { accessorKey: "description", header: "N·ªôi dung" },
    { accessorKey: "performedBy", header: "Th·ª±c hi·ªán b·ªüi" },
  ];

  const formatCurrency = (value: number) =>
    value.toLocaleString("vi-VN", {
      style: "currency",
      currency: "VND",
    });

  const statusColor =
    status === "ƒêang v·∫≠n h√†nh"
      ? "green"
      : status === "ƒêang b·∫£o tr√¨"
      ? "orange"
      : "gray";

  return (
    <Card radius="md" shadow="sm" p="lg" withBorder>
      <Stack gap="lg">
        <Group mb={"md"}>
          <Button
            variant="subtle"
            radius={4}
            leftSection={<IconArrowLeft size={18} />}
            onClick={() => navigate(-1)}
          >
            Quay l·∫°i
          </Button>
          <Title order={3}>üõ†Ô∏è Th√¥ng tin m√°y m√≥c</Title>
        </Group>
        {/* Th√¥ng tin chung */}
        <Grid>
          <Grid.Col span={6}>
            <Text size="sm" color="dimmed">
              M√£ m√°y:
            </Text>
            <Text fw={500}>{id}</Text>
          </Grid.Col>
          <Grid.Col span={6}>
            <Text size="sm" color="dimmed">
              T√™n m√°y:
            </Text>
            <Text fw={500}>{name}</Text>
          </Grid.Col>

          <Grid.Col span={6}>
            <Text size="sm" color="dimmed">
              Lo·∫°i xe:
            </Text>
            <Text fw={500}>{type}</Text>
          </Grid.Col>
          <Grid.Col span={6}>
            <Text size="sm" color="dimmed">
              Tr·∫°ng th√°i:
            </Text>
            <Badge color={statusColor}>{status}</Badge>
          </Grid.Col>

          <Grid.Col span={6}>
            <Text size="sm" color="dimmed">
              Gi√°:
            </Text>
            <Text fw={500}>{formatCurrency(price)}</Text>
          </Grid.Col>
          <Grid.Col span={6}>
            <Text size="sm" color="dimmed">
              S·ªë l∆∞·ª£ng:
            </Text>
            <Text fw={500}>{quantity}</Text>
          </Grid.Col>
        </Grid>

        {/* Th√¥ng s·ªë k·ªπ thu·∫≠t */}
        <Divider label="üìë Th√¥ng s·ªë k·ªπ thu·∫≠t" labelPosition="center" />
        <Box
          style={{
            border: "1px solid #ddd",
            borderRadius: 4,
            padding: 12,
            backgroundColor: "#fafafa",
            fontSize: 14,
          }}
          dangerouslySetInnerHTML={{ __html: specs }}
        />

        {/* T√†i li·ªáu PDF */}
        {manualFile && (
          <>
            <Divider label="üìò S·ªï tay h∆∞·ªõng d·∫´n" labelPosition="center" />
            <iframe
              src={manualFile}
              height="400px"
              width="100%"
              style={{ border: "1px solid #ccc", borderRadius: "8px" }}
              title="manual-pdf"
            />
          </>
        )}
        {inspectionFile && (
          <>
            <Divider label="üìÑ Bi√™n b·∫£n ƒëƒÉng ki·ªÉm" labelPosition="center" />
            <iframe
              src={inspectionFile}
              height="400px"
              width="100%"
              style={{ border: "1px solid #ccc", borderRadius: "8px" }}
              title="inspection-pdf"
            />
          </>
        )}

        {/* L·ªãch s·ª≠ b·∫£o tr√¨ */}
        <Divider label="üõ†Ô∏è L·ªãch s·ª≠ b·∫£o tr√¨" labelPosition="center" />
        <Table columns={maintenanceColumns} data={maintenanceRecords} />
      </Stack>
    </Card>
  );
};

export default MachineManagementMainDetailPage;
